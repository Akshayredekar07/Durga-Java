
Array varible assigments:


case 1: element level promotions not applicabe at array levle

e.g- char element is promted as int type
    where as char array cannot be promoted to int array



int[] x={10, 20, 30, 40};

char[] ch={'a', 'b', 'c'}

int[] b= x;
int[] c=ch; //invalid CE: imcomplatble type found


Question:
which of the following promotions will be performed autmomatically
char → int
String → Object
String[] → Object[]
char[] → int[]
int → double
int[] → double[]
float → int
float[] → int[]


but in case of Object type arrays child class type arrays can be promoted to parent class type array

LES:

String[]  A = {"A", "B", "C"};

Object[]  a = A;


case 2: 

int[] a = {10, 20,30,40 ,50, 60};
int b = {70, 80}

a = b 
b = a 
whenever we are assigning one array to another arrray internal elementas wont be copied just reference varible reassgined 
int[] a = {10, 20, 30, 40, 50, 60};
int[] b = {70, 80};

// ... (diagrammatic representation of arrays a and b)

// 1. a = b  (This would make 'a' reference the same array as 'b')
// 2. b = a  (This would make 'b' reference the same array as 'a') 


case 3: 

whenever we are assigning one array to another array the dimensions array must be matched

e.g. for 1 d int array we shoud provide 1sd array only if we are trying to provided any other dimensions then we will get 
compile time error

I can only extract the Test and identify some objects and public figures in this image.

Here's the Test from the image:

```
a = new int [3] [];

X  a[0] = new int[u]ΓΕ);                  →CE:                                  incompatible  turen

                                                                      found:                             inter

X  a[0] = 10,                                                                          required:  its)

                            CE:                                               incompatille tyres

                                 found it

                                 required:                                               intrつ

   a[0] = new int[2];


a
```

whenever we are assigning one array to another arrray both dimensions and types must be match but sizes are not required to match

class Test {  
    public static void main(String[] args) {  
        for (int i = 0; i < args.length; i++) {  
            System.out.println(args[i]);  
        }  
    }  
}  

javac Test.java  
java Test A B C  


java Test A B 


java Test



``````````````````````````````````````````````````````


class Test {
  public static void main(String[] args) {

    String[] argh = {"x", "y", "z"};
    args = argh;

    for (String s : args) {
      System.out.println(s);
    }
  }
}


Java Test A B C
X
Y
Z

Java Test A B
X
Y
Z

Java Test
X
Y 
Z

-----------------------------

